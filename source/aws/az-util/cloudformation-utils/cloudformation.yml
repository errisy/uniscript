Parameters:
  AWSAccountId:
    Type: String
  AWSRegion:
    Type: String
  Application:
    Type: String
  Version:
    Type: String
  Project:
    Type: String
  EnvironmentTarget:
    Type: String
  Runtime:
    Type: String
  BuildId:
    Type: String

Resources:
  TransformExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  TransformFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub ${AWSAccountId}-${AWSRegion}-stacks
        S3Key: !Sub ${Application}/${EnvironmentTarget}/${Version}/${Project}/${BuildId}/lambda.zip
      FunctionName: !Sub ${Application}--${Project}
      Handler: index.handler
      Runtime: !Sub ${Runtime}
      Role: !GetAtt TransformExecutionRole.Arn
  TransformFunctionPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt TransformFunction.Arn
      Principal: 'cloudformation.amazonaws.com'
  Transform:
    Type: AWS::CloudFormation::Macro
    Properties:
      Name: !Sub ${Project}
      Description: Provides various string processing functions
      FunctionName: !GetAtt TransformFunction.Arn

